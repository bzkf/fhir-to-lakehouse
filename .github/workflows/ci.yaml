name: ci

on:
  push:
    branches:
      - master
      - beta
  release:
    types:
      - created
  pull_request:
    branches:
      - master
      - beta

permissions:
  contents: read

jobs:
  build:
    uses: miracum/.github/.github/workflows/standard-build.yaml@4cc91eaee2ea6c0513da1195a6b53bb9c16f5666 # v1.13.1
    permissions:
      contents: write
      id-token: write
      packages: write
      pull-requests: write
      actions: read
      security-events: write
    with:
      enable-build-test-layer: false
      enable-upload-test-image: false
    secrets:
      github-token: ${{ secrets.GITHUB_TOKEN }}

  unit-tests:
    runs-on: ubuntu-24.04
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - name: Set up Python
        uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38 # v5.4.0
        with:
          python-version: 3.12
          cache: "pip"

      - name: Install test dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-test.txt

      - name: Run tests
        run: |
          pytest -vv --log-cli-level=20 --cov=src --cov-report=html tests/unit/

      - name: Upload test coverage
        if: ${{ always() }}
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
        with:
          name: pytest-results
          path: htmlcov/

  integration-tests:
    runs-on: ubuntu-24.04
    permissions:
      contents: read
    needs:
      - build
    steps:
      # <https://docs.docker.com/storage/containerd/>
      # via <https://github.com/docker/setup-buildx-action/issues/257>
      - name: Set up containerd image store
        shell: bash
        run: |
          [ -f /etc/docker/daemon.json ] || echo "{}" | sudo tee /etc/docker/daemon.json
          jq '. | .+{"features": {"containerd-snapshotter": true}}' /etc/docker/daemon.json > /tmp/docker-daemon-with-containerd.json
          sudo mv /tmp/docker-daemon-with-containerd.json /etc/docker/daemon.json
          cat /etc/docker/daemon.json
          sudo systemctl restart docker

          docker info -f '{{ .DriverStatus }}'

      - name: Create KinD cluster
        uses: helm/kind-action@a1b0e391336a6ee6713a0583f8c6240d70863de3 # v1.12.0
        with:
          config: tests/integration/kind-config.yaml

      - name: Download container image
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: ${{ needs.build.outputs.image-slug }}
          path: /tmp

      - name: Load image into KinD
        run: |
          # vfps api image
          kind load image-archive /tmp/image.tar

      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - name: Set up Python
        uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38 # v5.4.0
        with:
          python-version: 3.12
          cache: "pip"

      - name: Install test dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-test.txt

      - name: List images in cluster
        run: docker exec kind-control-plane crictl images

      - name: Install in cluster
        env:
          IMAGE_TAG: ${{ needs.build.outputs.image-version }}
        run: |
          helm dep up tests/integration/fixtures/
          helm upgrade --install --wait fixtures tests/integration/fixtures/
          helm upgrade --install --wait \
            --set "stream-processors.enabled=true" \
            --set "stream-processors.processors.fhir-to-delta.container.image.tag=test" \
            fixtures tests/integration/fixtures/

      - name: Run tests
        run: |
          pytest -vv --log-cli-level=20 --cov=src --cov-report=html tests/integration/

      - name: Upload test coverage
        if: ${{ always() }}
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
        with:
          name: pytest-results
          path: htmlcov/

  lint:
    uses: miracum/.github/.github/workflows/standard-lint.yaml@4cc91eaee2ea6c0513da1195a6b53bb9c16f5666 # v1.13.1
    permissions:
      contents: read
      pull-requests: write
      issues: write
      security-events: write
      actions: read
    with:
      enable-validate-gradle-wrapper: false
      codeql-languages: '["python"]'
      enable-codeql: true
      enable-verify-base-image-signature: false
    secrets:
      github-token: ${{ secrets.GITHUB_TOKEN }}

  release:
    uses: miracum/.github/.github/workflows/standard-release.yaml@4cc91eaee2ea6c0513da1195a6b53bb9c16f5666 # v1.13.1
    needs:
      - build
      - unit-tests
      - integration-tests
    permissions:
      contents: write
      pull-requests: write
      issues: write
    with:
      use-app-token: true
    secrets:
      app-token-app-id: ${{ secrets.RELEASER_APP_ID }}
      app-token-private-key: ${{ secrets.RELEASER_APP_PRIVATE_KEY }}
